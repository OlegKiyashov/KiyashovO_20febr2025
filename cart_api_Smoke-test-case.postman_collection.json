{
	"info": {
		"_postman_id": "34a46423-2a7e-423d-b8e3-0de2dfe6a91f",
		"name": "cart_api_Smoke-test-case",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36739955"
	},
	"item": [
		{
			"name": "Превью страница",
			"item": [
				{
					"name": "Добавить товар",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"// Получаем текущее суммарное количество товара из переменных коллекции\r",
									"var current_sum_quantity = pm.collectionVariables.get(\"current_sum_quantity\");\r",
									"\r",
									"// Получаем количество товара, которое нужно добавить\r",
									"var quantity = pm.collectionVariables.get(\"quantity\");\r",
									"\r",
									"// Преобразуем количество товара из строки в число\r",
									"quantity = parseInt(quantity);\r",
									"\r",
									"pm.test(\"Товар добавлен в корзину\", function () {\r",
									"    // Парсим JSON-ответ от сервера\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    // Вычисляем ожидаемое суммарное количество товара после добавления\r",
									"    var expected_sum_quantity = (parseInt(current_sum_quantity) + quantity).toString();\r",
									"    \r",
									"    // Проверяем, что сумма в ответе API соответствует ожидаемому значению\r",
									"    pm.expect(jsonData.sum_quantity).to.eql(expected_sum_quantity);\r",
									"});\r",
									"\r",
									"// Обновляем переменную `current_sum_quantity` в коллекции, используя значение из ответа API\r",
									"pm.collectionVariables.set(\"current_sum_quantity\", pm.response.json().sum_quantity);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "product_id",
									"value": "{{product_id}}",
									"type": "text"
								},
								{
									"key": "LANG_key",
									"value": "en",
									"type": "text"
								},
								{
									"key": "S_wh",
									"value": "1",
									"type": "text"
								},
								{
									"key": "S_CID",
									"value": "{{S_CID}}",
									"type": "text"
								},
								{
									"key": "S_cur_code",
									"value": "dol",
									"type": "text"
								},
								{
									"key": "S_koef",
									"value": "1",
									"type": "text"
								},
								{
									"key": "quantity",
									"value": "{{quantity}}",
									"type": "text"
								},
								{
									"key": "S_hint_code",
									"value": "",
									"type": "text"
								},
								{
									"key": "S_customerID",
									"value": "{{customer_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/add_products_to_cart_from_preview.php",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"add_products_to_cart_from_preview.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "Увеличить количество товара",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"// Получаем текущее суммарное количество товара из переменных коллекции\r",
									"var current_sum_quantity = pm.collectionVariables.get(\"current_sum_quantity\");\r",
									"\r",
									"// Получаем количество товара, которое нужно добавить\r",
									"var quantity = pm.collectionVariables.get(\"quantity\");\r",
									"\r",
									"// Преобразуем количество товара из строки в число\r",
									"quantity = parseInt(quantity);\r",
									"\r",
									"pm.test(\"Товар добавлен в корзину \", function () {\r",
									"    // Парсим JSON-ответ от сервера\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    // Вычисляем ожидаемое суммарное количество товара после добавления\r",
									"    var expected_sum_quantity = (parseInt(current_sum_quantity) + quantity).toString();\r",
									"    \r",
									"    // Проверяем, что сумма в ответе API соответствует ожидаемому значению\r",
									"    pm.expect(jsonData.sum_quantity).to.eql(expected_sum_quantity);\r",
									"});\r",
									"\r",
									"// Обновляем переменную `current_sum_quantity` в коллекции, используя значение из ответа API\r",
									"pm.collectionVariables.set(\"current_sum_quantity\", pm.response.json().sum_quantity);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "product_id",
									"value": "{{product_id}}",
									"type": "text"
								},
								{
									"key": "LANG_key",
									"value": "ru",
									"type": "text"
								},
								{
									"key": "S_wh",
									"value": "1",
									"type": "text"
								},
								{
									"key": "S_CID",
									"value": "{{S_CID}}",
									"type": "text"
								},
								{
									"key": "S_cur_code",
									"value": "rub",
									"type": "text"
								},
								{
									"key": "S_koef",
									"value": "1",
									"type": "text"
								},
								{
									"key": "quantity",
									"value": "{{quantity}}",
									"type": "text"
								},
								{
									"key": "S_hint_code",
									"value": "",
									"type": "text"
								},
								{
									"key": "S_customerID",
									"value": "{{customer_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/add_products_to_cart_from_preview.php",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"add_products_to_cart_from_preview.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "Уменьшить количество товара",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Получаем текущее суммарное количество товара из переменных коллекции\r",
									"var current_sum_quantity = pm.collectionVariables.get(\"current_sum_quantity\");\r",
									"\r",
									"// Получаем количество товара, которое нужно удалить\r",
									"var quantity = pm.collectionVariables.get(\"quantity\");\r",
									"\r",
									"// Преобразуем количество товара из строки в число\r",
									"quantity = parseInt(quantity);\r",
									"\r",
									"pm.test(\"Товар удален из корзины\", function () {\r",
									"    // Парсим JSON-ответ от сервера\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    // Вычисляем ожидаемое суммарное количество товара после удаления\r",
									"    var expected_sum_quantity = (parseInt(current_sum_quantity) - quantity).toString();\r",
									"    \r",
									"    // Проверяем, что сумма в ответе API соответствует ожидаемому значению\r",
									"    pm.expect(jsonData.sum_quantity).to.eql(expected_sum_quantity);\r",
									"});\r",
									"\r",
									"// Обновляем переменную `current_sum_quantity` в коллекции, используя значение из ответа API\r",
									"pm.collectionVariables.set(\"current_sum_quantity\", pm.response.json().sum_quantity);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "product_id",
									"value": "{{product_id}}",
									"type": "text"
								},
								{
									"key": "LANG_key",
									"value": "ru",
									"type": "text"
								},
								{
									"key": "S_wh",
									"value": "1",
									"type": "text"
								},
								{
									"key": "S_CID",
									"value": "{{S_CID}}",
									"type": "text"
								},
								{
									"key": "S_cur_code",
									"value": "rub",
									"type": "text"
								},
								{
									"key": "S_koef",
									"value": "1",
									"type": "text"
								},
								{
									"key": "quantity",
									"value": "{{quantity}}",
									"type": "text"
								},
								{
									"key": "S_hint_code",
									"value": "",
									"type": "text"
								},
								{
									"key": "S_customerID",
									"value": "{{customer_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/delete_products_from_cart_preview_by_productID.php",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"delete_products_from_cart_preview_by_productID.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удалить весь товар в корзине",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//  проверяем, что sum_quantity равно 0\r",
									"pm.test(\"Весь товар удален из корзины,sum_quantity равно 0\", function () {\r",
									"    // Парсим JSON-ответ от сервера\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    // Проверяем, что значение sum_quantity в ответе равно \"0\"\r",
									"    pm.expect(jsonData.sum_quantity).to.eql(\"0\");\r",
									"});\r",
									"\r",
									"// Устанавливаем переменную `current_sum_quantity` в коллекции равной \"0\"\r",
									"pm.collectionVariables.set(\"current_sum_quantity\", \"0\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "product_id",
									"value": "{{product_id}}",
									"type": "text"
								},
								{
									"key": "LANG_key",
									"value": "ru",
									"type": "text"
								},
								{
									"key": "S_wh",
									"value": "1",
									"type": "text"
								},
								{
									"key": "S_CID",
									"value": "{{S_CID}}",
									"type": "text"
								},
								{
									"key": "S_cur_code",
									"value": "rub",
									"type": "text"
								},
								{
									"key": "S_koef",
									"value": "1",
									"type": "text"
								},
								{
									"key": "S_hint_code",
									"value": "",
									"type": "text"
								},
								{
									"key": "S_customerID",
									"value": "{{customer_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/delete_products_from_cart_preview.php",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"delete_products_from_cart_preview.php"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			}
		},
		{
			"name": "Карточка товара",
			"item": [
				{
					"name": "Добавить товар",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"// Получаем текущее суммарное количество товара из переменных коллекции\r",
									"var current_sum_quantity = pm.collectionVariables.get(\"current_sum_quantity\");\r",
									"\r",
									"// Получаем количество товара, которое нужно добавить\r",
									"var quantity = pm.collectionVariables.get(\"quantity\");\r",
									"\r",
									"// Преобразуем количество товара из строки в число\r",
									"quantity = parseInt(quantity);\r",
									"\r",
									"pm.test(\"Товар добавлен в корзину\", function () {\r",
									"    // Парсим JSON-ответ от сервера\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    // Вычисляем ожидаемое суммарное количество товара после добавления\r",
									"    var expected_sum_quantity = (parseInt(current_sum_quantity) + quantity).toString();\r",
									"    \r",
									"    // Проверяем, что сумма в ответе API соответствует ожидаемому значению\r",
									"    pm.expect(jsonData.sum_quantity).to.eql(expected_sum_quantity);\r",
									"});\r",
									"\r",
									"// Обновляем переменную `current_sum_quantity` в коллекции, используя значение из ответа API\r",
									"pm.collectionVariables.set(\"current_sum_quantity\", pm.response.json().sum_quantity);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "product_id",
									"value": "{{product_id}}",
									"type": "text"
								},
								{
									"key": "this_listId",
									"value": "product_card",
									"type": "text"
								},
								{
									"key": "parent_product",
									"value": "{{product_id}}",
									"type": "text"
								},
								{
									"key": "LANG_key",
									"value": "ru",
									"type": "text"
								},
								{
									"key": "S_wh",
									"value": "1",
									"type": "text"
								},
								{
									"key": "S_CID",
									"value": "{{S_CID}}",
									"type": "text"
								},
								{
									"key": "S_cur_code",
									"value": "rub",
									"type": "text"
								},
								{
									"key": "S_koef",
									"value": "1",
									"type": "text"
								},
								{
									"key": "quantity",
									"value": "{{quantity}}",
									"type": "text"
								},
								{
									"key": "S_hint_code",
									"value": "",
									"type": "text"
								},
								{
									"key": "S_customerID",
									"value": "{{customer_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/add_products_to_cart_from_preview.php",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"add_products_to_cart_from_preview.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "Увеличить количество товара",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"// Получаем текущее суммарное количество товара из переменных коллекции\r",
									"var current_sum_quantity = pm.collectionVariables.get(\"current_sum_quantity\");\r",
									"\r",
									"// Получаем количество товара, которое нужно добавить\r",
									"var quantity = pm.collectionVariables.get(\"quantity\");\r",
									"\r",
									"// Преобразуем количество товара из строки в число\r",
									"quantity = parseInt(quantity);\r",
									"\r",
									"pm.test(\"Товар добавлен в корзину\", function () {\r",
									"    // Парсим JSON-ответ от сервера\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    // Вычисляем ожидаемое суммарное количество товара после добавления\r",
									"    var expected_sum_quantity = (parseInt(current_sum_quantity) + quantity).toString();\r",
									"    \r",
									"    // Проверяем, что сумма в ответе API соответствует ожидаемому значению\r",
									"    pm.expect(jsonData.sum_quantity).to.eql(expected_sum_quantity);\r",
									"});\r",
									"\r",
									"// Обновляем переменную `current_sum_quantity` в коллекции, используя значение из ответа API\r",
									"pm.collectionVariables.set(\"current_sum_quantity\", pm.response.json().sum_quantity);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "product_id",
									"value": "{{product_id}}",
									"type": "text"
								},
								{
									"key": "this_listId",
									"value": "product_card",
									"type": "text"
								},
								{
									"key": "parent_product",
									"value": "{{product_id}}",
									"type": "text"
								},
								{
									"key": "LANG_key",
									"value": "ru",
									"type": "text"
								},
								{
									"key": "S_wh",
									"value": "1",
									"type": "text"
								},
								{
									"key": "S_CID",
									"value": "{{S_CID}}",
									"type": "text"
								},
								{
									"key": "S_cur_code",
									"value": "rub",
									"type": "text"
								},
								{
									"key": "S_koef",
									"value": "1",
									"type": "text"
								},
								{
									"key": "quantity",
									"value": "{{quantity}}",
									"type": "text"
								},
								{
									"key": "S_hint_code",
									"value": "",
									"type": "text"
								},
								{
									"key": "S_customerID",
									"value": "{{customer_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/add_products_to_cart_from_preview.php",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"add_products_to_cart_from_preview.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "Уменьшить количество товара",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Получаем текущее суммарное количество товара из переменных коллекции\r",
									"var current_sum_quantity = pm.collectionVariables.get(\"current_sum_quantity\");\r",
									"\r",
									"// Получаем количество товара, которое нужно удалить\r",
									"var quantity = pm.collectionVariables.get(\"quantity\");\r",
									"\r",
									"// Преобразуем количество товара из строки в число\r",
									"quantity = parseInt(quantity);\r",
									"\r",
									"pm.test(\"Товар удален из корзины\", function () {\r",
									"    // Парсим JSON-ответ от сервера\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    // Вычисляем ожидаемое суммарное количество товара после удаления\r",
									"    var expected_sum_quantity = (parseInt(current_sum_quantity) - quantity).toString();\r",
									"    \r",
									"    // Проверяем, что сумма в ответе API соответствует ожидаемому значению\r",
									"    pm.expect(jsonData.sum_quantity).to.eql(expected_sum_quantity);\r",
									"});\r",
									"\r",
									"// Обновляем переменную `current_sum_quantity` в коллекции, используя значение из ответа API\r",
									"pm.collectionVariables.set(\"current_sum_quantity\", pm.response.json().sum_quantity);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "product_id",
									"value": "{{product_id}}",
									"type": "text"
								},
								{
									"key": "this_listId",
									"value": "product_card",
									"type": "text"
								},
								{
									"key": "parent_product",
									"value": "{{product_id}}",
									"type": "text"
								},
								{
									"key": "LANG_key",
									"value": "ru",
									"type": "text"
								},
								{
									"key": "S_wh",
									"value": "1",
									"type": "text"
								},
								{
									"key": "S_CID",
									"value": "{{S_CID}}",
									"type": "text"
								},
								{
									"key": "S_cur_code",
									"value": "rub",
									"type": "text"
								},
								{
									"key": "S_koef",
									"value": "1",
									"type": "text"
								},
								{
									"key": "quantity",
									"value": "{{quantity}}",
									"type": "text"
								},
								{
									"key": "S_hint_code",
									"value": "",
									"type": "text"
								},
								{
									"key": "S_customerID",
									"value": "{{customer_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/delete_products_from_cart_preview_by_productID.php",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"delete_products_from_cart_preview_by_productID.php"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Корзина",
			"item": [
				{
					"name": "Изменение количества товара",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Получаем значение количества товара из переменных коллекции Postman\r",
									"var quantity = pm.collectionVariables.get(\"quantity\");\r",
									"\r",
									"pm.test(\"Количество товара изменено\", function () {\r",
									"    // Парсим JSON-ответ от сервера, который содержит актуальное количество товара\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    // Проверяем, что значение sum_quantity в ответе API соответствует ожидаемому значению (quantity)\r",
									"    pm.expect(jsonData.sum_quantity).to.eql(quantity);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "itemID",
									"value": "793400",
									"type": "text"
								},
								{
									"key": "quantity",
									"value": "{{quantity}}",
									"type": "text"
								},
								{
									"key": "action",
									"value": "update_quantity",
									"type": "text"
								},
								{
									"key": "LANG_key",
									"value": "ru",
									"type": "text"
								},
								{
									"key": "S_wh",
									"value": "1",
									"type": "text"
								},
								{
									"key": "S_CID",
									"value": "{{S_CID}}",
									"type": "text"
								},
								{
									"key": "S_cur_code",
									"value": "rub",
									"type": "text"
								},
								{
									"key": "S_koef",
									"value": "1",
									"type": "text"
								},
								{
									"key": "S_hint_code",
									"value": "",
									"type": "text"
								},
								{
									"key": "S_customerID",
									"value": "{{customer_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/action_with_basket_on_cart_page.php",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"action_with_basket_on_cart_page.php"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удалить весь товар в корзине",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"//  проверяем, что sum_quantity равно 0\r",
									"pm.test(\"Весь товар удален из корзины, sum_quantity равно 0\", function () {\r",
									"    // Парсим JSON-ответ от сервера\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    // Проверяем, что значение sum_quantity в ответе равно \"0\"\r",
									"    pm.expect(jsonData.sum_quantity).to.eql(\"0\");\r",
									"});\r",
									"\r",
									"// Устанавливаем переменную `current_sum_quantity` в коллекции равной \"0\"\r",
									"pm.collectionVariables.set(\"current_sum_quantity\", \"0\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "product_id",
									"value": "{{product_id}}",
									"type": "text"
								},
								{
									"key": "LANG_key",
									"value": "ru",
									"type": "text"
								},
								{
									"key": "S_wh",
									"value": "1",
									"type": "text"
								},
								{
									"key": "S_CID",
									"value": "{{S_CID}}",
									"type": "text"
								},
								{
									"key": "S_cur_code",
									"value": "rub",
									"type": "text"
								},
								{
									"key": "S_koef",
									"value": "1",
									"type": "text"
								},
								{
									"key": "S_hint_code",
									"value": "",
									"type": "text"
								},
								{
									"key": "S_customerID",
									"value": "{{customer_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/delete_products_from_cart_preview.php",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"delete_products_from_cart_preview.php"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "sJxYRHG9msW2",
				"type": "string"
			},
			{
				"key": "username",
				"value": "qa.olegk@yandex.ru",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "test",
			"script": {
				"exec": [
					"",
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});",
					""
				],
				"type": "text/javascript"
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://altaivita.ru/engine/cart",
			"type": "string"
		},
		{
			"key": "S_CID",
			"value": "6d41690293da1d283a03f36c033d59d5",
			"type": "string"
		},
		{
			"key": "customer_id",
			"value": "372162",
			"type": "string"
		},
		{
			"key": "current_sum_quantity",
			"value": "0",
			"type": "string"
		},
		{
			"key": "quantity",
			"value": "1",
			"type": "string"
		},
		{
			"key": "product_id",
			"value": "2305",
			"type": "string"
		}
	]
}